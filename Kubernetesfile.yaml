apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: patrickoceandigital/frontend
        imagePullPolicy: Always  
        ports:
        - containerPort: 80
      imagePullSecrets:
        - name: secretdockerhub

---

apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  ports:
    - port: 80
      targetPort: 80
  type: ClusterIP
  selector:
    app: frontend

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fullingress
  annotations:
    kubernetes.io/ingress.class: nginx
    #nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS, DELETE"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "false"
    nginx.ingress.kubernetes.io/cors-allow-origin: "http://idyllwildsoft.com"
    nginx.ingress.kubernetes.io/ingress.allow-http: "true"
   
spec:
  rules:
  - host: "idyllwildsoft.com"
    http:
      paths:
        - path:  /*
          pathType: Prefix
          backend:
             service:
              name: frontend
              port:
                number: 80
        - path:  /home
          pathType: Prefix
          backend:
             service:
              name: backendservice
              port:
                name: backendport
        - path: /api/*
          pathType: Prefix
          backend:
             service:
              name: backendservice
              port:
                name: backendport
        - path: /customers/*
          pathType: Prefix
          backend:
             service:
              name: backendservice
              port:
                name: backendport
